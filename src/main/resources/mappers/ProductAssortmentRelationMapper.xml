<?xml version="1.0" encoding="UTF-8" ?>
		<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhiot.basic.mapper.ProductAssortmentRelationMapper">

<!-- 数据库字段对象关系映射 -->
<resultMap id="BaseResultMap"
		   type="com.lhiot.basic.domain.ProductAssortmentRelation" >
	<id column="id" property="id"/>
	<result column="assortment_id" property="assortmentId" />
	<result column="standard_id" property="standardId" />
	<result column="relation_count" property="relationCount" />
</resultMap>

<!-- base查询字段  -->
<sql id="Base_Column_List" >
	<trim suffixOverrides="," >
		id,
		assortment_id,
		standard_id,
		relation_count,
	</trim>
</sql>

<!--新增套餐商品关联-->
<insert id="create" parameterType="com.lhiot.basic.domain.ProductAssortmentRelation" useGeneratedKeys="true" keyProperty="id">
	insert into product_assortment_relation
	<trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="id != null ">
			id,
		</if>
		<if test="assortmentId != null ">
			assortment_id,
		</if>
		<if test="standardId != null ">
			standard_id,
		</if>
		<if test="relationCount != null ">
			relation_count,
		</if>
	</trim>
	<trim prefix="values (" suffix=")" suffixOverrides="," >
		<if test="id != null ">
			#{id},
		</if>
		<if test="assortmentId != null ">
			#{assortmentId},
		</if>
		<if test="standardId != null ">
			#{standardId},
		</if>
		<if test="relationCount != null ">
			#{relationCount},
		</if>
	</trim>
</insert>

<!--根据id修改套餐商品关联-->
<update id="updateById" parameterType="com.lhiot.basic.domain.ProductAssortmentRelation">
	update product_assortment_relation
	<set>
		<if test="id != null ">
			id = #{id},
		</if>
		<if test="assortmentId != null ">
			assortment_id = #{assortmentId},
		</if>
		<if test="standardId != null ">
			standard_id = #{standardId},
		</if>
		<if test="relationCount != null ">
			relation_count = #{relationCount},
		</if>
	</set>
	where id=#{id}
</update>

<!--根据ids删除套餐商品关联-->
<delete id="deleteByIds" parameterType="java.util.List">
	delete from product_assortment_relation where id in
	<foreach collection="list" item="item" open="("
			 separator="," close=")">
		#{item}
	</foreach>
</delete>


<!-- 根据id查找套餐商品关联 -->
<select id="selectById" resultMap="BaseResultMap"
		parameterType="long"> select <include refid="Base_Column_List" />
	from product_assortment_relation where id = #{id}
</select>


<!-- base where条件  -->
<sql id="Base_Where_Condition" >
	<where>
		<if test="id != null ">
			and id = #{id}
		</if>
		<if test="assortmentId != null ">
			and assortment_id = #{assortmentId}
		</if>
		<if test="standardId != null ">
			and standard_id = #{standardId}
		</if>
		<if test="relationCount != null ">
			and relation_count = #{relationCount}
		</if>
	</where>
</sql>


<!--查询套餐商品关联列表-->
<select id="pageProductAssortmentRelations" resultMap="BaseResultMap"
		parameterType="com.lhiot.basic.domain.ProductAssortmentRelation">
	select <include refid="Base_Column_List" />
	from product_assortment_relation
	<include refid="Base_Where_Condition" />
	<include refid="common.pager" />
</select>

<!--查询套餐商品关联总记录-->
<select id="pageProductAssortmentRelationCounts" resultType="long"
		parameterType="com.lhiot.basic.domain.ProductAssortmentRelation">
	select count(1)
	from product_assortment_relation
	<include refid="Base_Where_Condition" />
</select>
	<!-- lynn 根据套餐id查询商品 -->
	<select id="findProductByAssortmentId" parameterType="Long"
			resultType="com.lhiot.basic.domain.ProductStandardResult">
		SELECT t_ps.*,t_par.relation_count
		FROM product_assortment_relation t_par
		LEFT JOIN product_standard t_ps ON t_par.standard_id = t_ps.id
		WHERE t_par.assortment_id = #{0}
	</select>
</mapper>